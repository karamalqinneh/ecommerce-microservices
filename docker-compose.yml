version: '3.7'
services:
  mongodb_container:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    platform: linux/x86_64
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://broker:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    networks:
      - services


  #  config-server:
#    image: kqinneh/config-server:v1
#    container_name: config-server
#    platform: linux/x86_64
#    ports:
#      - "8888:8888"
#    expose:
#      - "8888"
#    healthcheck:
#      test: [ "CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#    networks:
#      - services


  store-service:
    image: kqinneh/store-service:v1
#    pull_policy: always
    container_name: store-service
    platform: linux/x86_64
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb_container
      - service-registry
    restart: always
    networks:
      - services

  review-service:
#    pull_policy: always
    image: kqinneh/review-service:v1
    container_name: review-service
    platform: linux/x86_64
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb_container
      - broker
      - zookeeper
      - service-registry
    restart: always
    networks:
      - services

  service-registry:
#    pull_policy: always
    image: kqinneh/service-registry:v1
    container_name: service-registry
    platform: linux/x86_64
    ports:
      - "8761:8761"
#    expose:
#      - "8761"
        #    environment:
    #      - SPRING_PROFILES_ACTIVE=docker
    restart: always
    networks:
      - services

  notification-service:
#    pull_policy: always
    image: kqinneh/notification-service:v1
    container_name: notification-service
    platform: linux/x86_64
    #    environment:
    #      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb_container
      - broker
      - zookeeper
      - service-registry
    restart: always
    networks:
      - services

  gateway-server:
#    pull_policy: always
    image: kqinneh/gateway-server:v1
    container_name: gateway-server
    platform: linux/x86_64
    ports:
      - "8072:8072"
#    expose:
#      - "8072"
        #    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - store-service
      - review-service
      - notification-service
      - service-registry
    restart: always
    networks:
      - services

networks:
  kafka-net:
    driver: bridge
  services:
    driver: bridge
volumes:
  mongodb_data_container: